matrix:
    include:
#        - os: osx
#          osx_image: xcode61
#          language: objective-c
        - os: linux
          sudo: required
          dist: trusty
          env: PIP=pip
          language: cpp
          compiler: gcc
          addons:
            apt:
                packages:
                    - libusb-1.0
                    - libboost-all-dev
      
before_install:
- if [[ ${TRAVIS_OS_NAME} == linux ]]; then sudo apt-get install libudev-dev ; fi

#- if [[ ${TRAVIS_OS_NAME} == linux ]]; then sudo wget http://qtmirror.ics.com/pub/qtproject/development_releases/qt/5.4/5.4.0-rc/qt-opensource-linux-x64-5.4.0-rc.run ; fi
#- if [[ ${TRAVIS_OS_NAME} == linux ]]; then sudo chmod 755 qt-o* ; fi
#- if [[ ${TRAVIS_OS_NAME} == linux ]]; then sudo ./qt-opensource-linux-x64-5.4.0-rc.run; fi
- if [[ ${TRAVIS_OS_NAME} == linux ]]; then cd /tmp ; fi
- if [[ ${TRAVIS_OS_NAME} == linux ]]; then sudo wget https://download.qt.io/official_releases/qt/5.6/5.6.2/single/qt-everywhere-opensource-src-5.6.2.tar.gz ; fi
- if [[ ${TRAVIS_OS_NAME} == linux ]]; then tar -xzf qt-everywhere-opensource-src-5.6.2.tar.gz ; cd /tmp/qt-everywhere-opensource-src-5.6.2 ; fi
- if [[ ${TRAVIS_OS_NAME} == linux ]]; then sudo ./configure -opensource -release -confirm-license -qt-xcb ; fi
- if [[ ${TRAVIS_OS_NAME} == linux ]]; then make ; fi
- if [[ ${TRAVIS_OS_NAME} == linux ]]; then make install ; fi
#- if [[ ${TRAVIS_OS_NAME} == linux ]]; then sudo apt-get install qt5-qmake qtbase5-dev ; fi
#- if [[ ${TRAVIS_OS_NAME} == linux ]]; then sudo apt-get install qtdeclarative5-controls-plugin qtdeclarative5-quicklayouts-plugin qtdeclarative5-dev ; fi

- if [[ ${TRAVIS_OS_NAME} == osx ]]; then brew update 2>&1 > /dev/null ; fi
- if [[ ${TRAVIS_OS_NAME} == osx ]]; then brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/cb21e9ac30e47e3ea161c4247a6397967f83c83f/Formula/libusb.rb --universal; fi
- if [[ ${TRAVIS_OS_NAME} == osx ]]; then brew install qt5 2>&1 > /dev/null ; fi
- if [[ ${TRAVIS_OS_NAME} == osx ]]; then brew link qt5 --force ; fi
- pip install cython

before_script: 
- git clone https://github.com/analogdevicesinc/libsmu.git
- cd libsmu
- git checkout rework
- mkdir build && cd build && cmake -DBUILD_PYTHON=OFF -DCMAKE_INSTALL_PREFIX=/usr/local/ ..
- make
- sudo make install
- cd ../..
- if [[ ${TRAVIS_OS_NAME} == osx ]]; then /usr/local/opt/qt5/bin/qmake ; fi
- if [[ ${TRAVIS_OS_NAME} == linux ]]; then qmake -qt=qt5 -v; qmake -qt=qt5; fi

script:
- make
- /usr/local/opt/qt5/bin/macdeployqt pixelpulse2.app -always-overwrite -verbose=2 -qmldir=qml
- curl -o /tmp/macdeployqtfix.py https://raw.githubusercontent.com/aurelien-rainone/macdeployqtfix/master/macdeployqtfix.py
- python /tmp/macdeployqtfix.py ./pixelpulse2.app/Contents/MacOS/pixelpulse2 /usr/local/Cellar/qt5/5.5.0_1/
- /usr/local/opt/qt5/bin/macdeployqt pixelpulse2.app -dmg -no-plugins
- mkdir deploy
- cp pixelpulse2.dmg deploy
deploy:
  provider: s3
  access_key_id: AKIAJIUMJWTHBLSLXXPA
  secret_access_key:
    secure: OLYC1jXlh0sO+4rCJFci6AnsMCl4BQpiUCC6ndExCpRdJdHeHa7AmK7VqYEWp2esD+4oh+aq+wBKA7ZpKzWIbpDffvCFfGvph8nCnUhXpfy5bRG2nsKU4NbcwYy8vd+xzY/EY5neTqWwMbbsL7L+baqs4GGv9mHzKRhCPycOW+c=
  bucket: pixelpulse2nightly
  skip_cleanup: true
  local_dir: deploy
  acl: public_read
  on:
    repo: analogdevicesinc/Pixelpulse2
    all_branches: true
